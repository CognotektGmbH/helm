apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "chart.fullname" . }}
  labels:
    app: {{ template "chart.name" . }}
    chart: {{ template "chart.label" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 4}}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "chart.name" . }}
      release: {{ .Release.Name }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.rollingUpdate.maxSurgeCount }}
      maxUnavailable: {{ .Values.rollingUpdate.maxUnavaliableCount }}
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: {{ template "chart.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.labels }}
{{ toYaml .Values.labels | indent 8}}
        {{- end }}
      {{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 10 }}
      {{- end }}
    spec:
      {{- if .Values.image.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.image.imagePullSecrets }}
      {{- end }}
      {{- if .Values.volumes }}
      volumes:
{{ toYaml .Values.volumes | indent 8}}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
{{ toYaml .Values.initContainers | indent 8 }}
      {{- end }}
      {{ if .Values.irsaRoleName }}
      serviceAccountName: {{ .Release.Name }}
      {{ end }}
      {{- if .Values.containers }}
      containers:
{{ toYaml .Values.containers | indent 8 }}
      {{- else }}
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.securityContext }}
          securityContext:
            capabilities:
              add:
                {{ toYaml .Values.securityContext | indent 8 }}
          {{- end }}
          ports:
          {{- range .Values.image.ports }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: TCP
          {{- end }}
          {{- with .Values.image.livenessProbe }}
          livenessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeOutSeconds }}
            failureThreshold: {{ .failureThreshold }}

          {{- end }}
          {{- with .Values.image.readinessProbe }}
          readinessProbe:
            httpGet:
              path: {{ .path }}
              port: {{ .port }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            failureThreshold: {{ .failureThreshold }}
          {{- end }}
          env:
            {{- range .Values.image.env }}
            - name: {{ .name}}
            {{ if .value }}
              value: {{ quote .value }}
            {{ else if .valueFrom }}
              valueFrom:
              {{ if .valueFrom.secretKeyRef }}
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name }}
                  key: {{ .valueFrom.secretKeyRef.key }}
                  optional: {{ .valueFrom.secretKeyRef.optional }}
              {{ else if .valueFrom.configMapKeyRef }}
                configMapKeyRef:
                  name: {{ .valueFrom.configMapKeyRef.name }}
                  key: {{ .valueFrom.configMapKeyRef.key }}
                  optional: {{ .valueFrom.configMapKeyRef.optional }}
              {{- end}}
            {{- end}}
            {{- end}}
          securityContext:
            runAsUser: {{ .Values.image.runAsUser }}
          {{- if .Values.image.volumeMounts }}
          volumeMounts:
{{ toYaml .Values.image.volumeMounts | indent 12 }}
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      {{- end }}
    {{- if $.Values.autoscaling }}
      nodeSelector:
        autoscaling-node: "true"
        {{- with .Values.nodeSelector }}
{{ toYaml . | indent 8 }}
        {{- end }}
      tolerations:
        - key: autoscaling-node
          operator: Equal
          value: "false"
          effect: NoExecute
        {{- with .Values.tolerations }}
{{ toYaml . | indent 8 }}
        {{- end }}
    {{- else }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
      securityContext:
        fsGroup: {{ .Values.image.runAsUser }}
